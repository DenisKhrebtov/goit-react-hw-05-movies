{"version":3,"file":"static/js/713.a6966c4d.chunk.js","mappings":"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","sources":["api/api.js","constanсe/imageUrl.js","pages/MoviesDetails/MoviesDetail.styled.js","pages/MoviesDetails/MoviesDetails.jsx"],"sourcesContent":["import axios from 'axios';\n\naxios.defaults.baseURL = 'https://api.themoviedb.org/3/';\nconst API_KEY = '572822f6c91e4ecf30bc82c47474f59a';\n\nexport async function fetchTrendFilms() {\n  try {\n    const response = await axios.get(`trending/movie/day?api_key=${API_KEY}`);\n    return response.data.results;\n  } catch (error) {\n    console.error(error);\n  }\n}\n\nexport async function fetchFilmsByName(query) {\n  try {\n    const response = await axios.get(`search/movie?api_key=${API_KEY}`, {\n      params: {\n        language: `en-US`,\n        query: query,\n        page: 1,\n        include_adult: false,\n      },\n    });\n\n    return response.data.results;\n  } catch (error) {\n    console.error(error);\n  }\n}\n\nexport async function getFilmInfo(filmId) {\n  try {\n    const response = await axios.get(`movie/${filmId}?api_key=${API_KEY}`, {\n      params: {\n        language: `en - US`,\n      },\n    });\n    return response.data;\n  } catch (error) {\n    console.error(error);\n  }\n}\n\nexport async function getFilmCast(filmId) {\n  try {\n    const response = await axios.get(\n      `movie/${filmId}/credits?api_key=${API_KEY}`,\n      {\n        params: {\n          language: `en - US`,\n        },\n      }\n    );\n    return response.data.cast;\n  } catch (error) {\n    console.error(error);\n  }\n}\n\nexport async function getFilmReviews(filmId) {\n  try {\n    const response = await axios.get(\n      `movie/${filmId}/reviews?api_key=${API_KEY}`,\n      {\n        params: {\n          language: `en - US`,\n          page: 1,\n        },\n      }\n    );\n    return response.data.results;\n  } catch (error) {\n    console.error(error);\n  }\n}\n","export const URL = 'https://image.tmdb.org/t/p/w500';\n","import styled from 'styled-components';\n\nimport { Link } from 'react-router-dom';\n\nexport const Wrap = styled.div`\n  display: grid;\n  grid-template-columns: 230px 1fr;\n  width: 100%;\n`;\n\nexport const Img = styled.img`\n  display: block;\n  width: 100%;\n`;\n\nexport const ImageWrap = styled.div`\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  height: 100%;\n  margin: 0px 15px;\n`;\n\nexport const AccentText = styled.p`\n  font-size: 16px;\n  font-weight: 700;\n`;\n\nexport const InfoWrap = styled.div`\n  display: flex;\n  flex-direction: column;\n  justify-content: space-around;\n`;\n\nexport const BackNavLink = styled(Link)`\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  margin: 8px 0px 5px 5px;\n  width: 70px;\n  height: 20px;\n  border-radius: 8px;\n  border: 1px solid black;\n  text-decoration: none;\n  color: black;\n  font-size: 12px;\n  font-weight: 500;\n  transition: all 250ms cubic-bezier(0.4, 0, 0.2, 1);\n  &:hover,\n  &:focus {\n    background-color: tomato;\n    color: white;\n    scale: 0.995;\n    font-weight: 700;\n  }\n`;\n\nexport const List = styled.ul`\n  display: flex;\n  text-decoration: none;\n  list-style-type: none;\n`;\n","import { Outlet, useParams, useLocation } from 'react-router-dom';\nimport { useState, useEffect, Suspense } from 'react';\nimport { getFilmInfo } from '../../api/api';\n\nimport { Loader } from 'components/Loader';\n\nimport { URL } from '../../constanсe/imageUrl';\n\nimport noPhoto from '../../img/noimage.webp';\n\nimport {\n  Img,\n  ImageWrap,\n  Wrap,\n  AccentText,\n  InfoWrap,\n  BackNavLink,\n  List,\n} from './MoviesDetail.styled';\n\nconst MoviesDetails = () => {\n  const [filmInfo, setFilmInfo] = useState(null);\n  const param = useParams();\n  const location = useLocation();\n  const backLinkHref = location.state?.from ?? '/products';\n\n  useEffect(() => {\n    getFilmInfo(param.movieId).then(data => {\n      setFilmInfo(data);\n    });\n  }, [param.movieId]);\n\n  if (!filmInfo) {\n    return;\n  }\n  const date = new Date(filmInfo.release_date).getFullYear();\n  return (\n    <div>\n      <BackNavLink to={backLinkHref}>Go back</BackNavLink>\n      <Wrap>\n        <ImageWrap>\n          {\n            <Img\n              src={filmInfo.poster_path ? URL + filmInfo.poster_path : noPhoto}\n              alt={filmInfo.title}\n            />\n          }\n        </ImageWrap>\n        <InfoWrap>\n          <h2>{`${filmInfo.title} (${date})`} </h2>\n          <p>User Score: {((filmInfo.vote_average / 10) * 100).toFixed()} %</p>\n          <AccentText>Overview</AccentText>\n          <p>{filmInfo.overview}</p>\n          <AccentText>Genres</AccentText>\n          <p>\n            {filmInfo.genres.map(({ name, id }) => (\n              <span key={id}> {name}</span>\n            ))}\n          </p>\n        </InfoWrap>\n      </Wrap>\n      <h3>Additional information</h3>\n      <List>\n        <li key=\"cast\">\n          <BackNavLink to=\"cast\" state={{ from: backLinkHref }}>\n            Cast\n          </BackNavLink>\n        </li>\n        <li key=\"reviews\">\n          <BackNavLink to=\"reviews\" state={{ from: backLinkHref }}>\n            Reviews\n          </BackNavLink>\n        </li>\n      </List>\n      <Suspense fallback={<Loader />}>\n        <Outlet />\n      </Suspense>\n    </div>\n  );\n};\n\nexport default MoviesDetails;\n"],"names":["axios","API_KEY","fetchTrendFilms","response","data","results","console","error","fetchFilmsByName","query","params","language","page","include_adult","getFilmInfo","filmId","getFilmCast","cast","getFilmReviews","URL","Wrap","styled","Img","ImageWrap","AccentText","InfoWrap","BackNavLink","Link","List","useState","filmInfo","setFilmInfo","param","useParams","backLinkHref","useLocation","state","from","useEffect","movieId","then","date","Date","release_date","getFullYear","to","src","poster_path","noPhoto","alt","title","vote_average","toFixed","overview","genres","map","name","id","Suspense","fallback","Loader"],"sourceRoot":""}